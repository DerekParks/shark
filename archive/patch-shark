--- archive/shark.c	2011-04-10 12:02:09.657483390 -0500
+++ shark.c	2011-04-17 15:45:28.729735848 -0500
@@ -1,7 +1,18 @@
 /* This souce code written my Michael Rolig (email: michael_rolig@alumni.macalester.edu)
  * This can be considered to be in the public domain
+ *
+ * Support for multiple RadioSHARK devices added on 4/10/2011 by Justin 
+ * Yunke (e-mail: yunke@productivity.org).
+ *
+ * This code is still considered to be in the public domain
+ *
+ * To use multiple RadioSHARK cards, add a command line parameter with 
+ * the number of RadioSHARK devices to "skip" past.  Since the RadioSHARK 
+ * devices don't have a serial number, this is probably the easiest way 
+ * to do it.
  */
 
+#define SHARK_VERSION "1.0 4/17/2011"
 #define DEBUG false		/* Set true for copious debugging output */
 #define SHARK_VENDID 0x077d	/* Griffin's Vendor ID */
 #define SHARK_DEVID 0x627a	/* The radioSHARK's Device ID */
@@ -16,13 +27,30 @@
 #include <hid.h>
 
 void usage(int argc, const char** argv) {
-	printf("%s <command> <arg>\n\tchange state of radioSHARK\n\n", argv[0]);
+	printf("Shark Version %s\n\n",SHARK_VERSION);
+	printf("%s <command> <arg> [skip]\n\tchange state of radioSHARK\n\n", argv[0]);
 	printf("commands:\n"
 		" -fm <freqeuncy>    : set FM frequency, e.g. '-fm 91.5'\n"
 		" -am <frequency>    : set AM frequency, e.g. '-am 730'\n"
 		" -blue <intensity>  : turn on blue LED (0-127) '-blue 127'\n"
 		" -bblue <freqency>  : turn on blue LED pulsing (0-127) '-bblue 64'\n"
-		" -red <0/1>         : turn on/off red LED '-red 1'\n");
+		" -red <0/1>         : turn on/off red LED '-red 1'\n\n"
+		"Optional argument [skip] is the number of USB devices to skip\nwhen using multiple RadioSHARKs.\n");
+}
+
+bool matcher_skip_fn(struct usb_dev_handle const* dev_h, void* custom, unsigned int len) {
+  struct usb_device const* dev = usb_device((usb_dev_handle*)dev_h);
+  unsigned int* skip = custom;
+
+  if (*skip == 0) {
+    return true;
+  }
+
+  if (dev->descriptor.idVendor == SHARK_VENDID && dev->descriptor.idProduct == SHARK_DEVID) {
+    *skip = *skip - 1;
+  }
+
+  return false;
 }
 
 int main(int argc, const char** argv) {
@@ -30,7 +58,8 @@
 	/* Declare variables used later */
 	hid_return ret;
 	HIDInterface* hid;
-	HIDInterfaceMatcher matcher = { SHARK_VENDID, SHARK_DEVID, NULL, NULL, 0 };
+	unsigned int skip = 0;
+	HIDInterfaceMatcher matcher = { SHARK_VENDID, SHARK_DEVID, *matcher_skip_fn, &skip, 0 };
 
 	/* Build the instruction packet to send to the shark */
 	unsigned char PACKET[SEND_PACKET_LENGTH] = { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 };
@@ -38,7 +67,10 @@
 	float freq;
 	unsigned short stereo;
 	int intensity; 
-	if (argc == 3) {
+        if (argc == 4) {
+          skip = (unsigned int)atoi(argv[3]);
+        }
+	if (argc == 3 || argc == 4) {
 		if (strcmp(argv[1], "-fm") == 0) {
 			/* Tune to an FM frequency */
 			PACKET[0] = 0xC0;
